openapi: 3.0.3
info:
  title: Biblioteca Bates
  version: 1.0.0
  description: O objetivo desse projeto Ã© oferecer uma API REST para o gerenciamento
    dos livros na Biblioteca Bates.
paths:
  /api/books/:
    get:
      operationId: api_books_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedBookList'
          description: ''
    post:
      operationId: api_books_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
  /api/books/{book_id}/:
    get:
      operationId: api_books_retrieve
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    put:
      operationId: api_books_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Book'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Book'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Book'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    patch:
      operationId: api_books_partial_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedBook'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedBook'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
          description: ''
    delete:
      operationId: api_books_destroy
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/{book_id}/copy/:
    get:
      operationId: api_books_copy_list
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCopyserializerList'
          description: ''
    post:
      operationId: api_books_copy_create
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copyserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copyserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copyserializer'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copyserializer'
          description: ''
  /api/books/{book_id}/copyretriever/:
    get:
      operationId: api_books_copyretriever_retrieve
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copyserializer'
          description: ''
    put:
      operationId: api_books_copyretriever_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Copyserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Copyserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Copyserializer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copyserializer'
          description: ''
    patch:
      operationId: api_books_copyretriever_partial_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCopyserializer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCopyserializer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCopyserializer'
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Copyserializer'
          description: ''
    delete:
      operationId: api_books_copyretriever_destroy
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/books/{book_id}/follow/:
    patch:
      operationId: api_books_follow_partial_update
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_books_follow_destroy
      parameters:
      - in: path
        name: book_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/books/{copy_id}/return/:
    put:
      operationId: api_books_return_update
      parameters:
      - in: path
        name: copy_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
    patch:
      operationId: api_books_return_partial_update
      parameters:
      - in: path
        name: copy_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLoan'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/books/{user_id}/loan/:
    get:
      operationId: api_books_loan_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLoanList'
          description: ''
    post:
      operationId: api_books_loan_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Loan'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Loan'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Loan'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Loan'
          description: ''
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: api_users_login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        isbn:
          type: string
          maxLength: 17
        title:
          type: string
          maxLength: 150
        author:
          type: string
          maxLength: 150
        publisher:
          type: string
          maxLength: 100
        edition:
          type: string
          format: date
        genre:
          type: string
          nullable: true
          maxLength: 50
        language:
          type: string
          maxLength: 50
        pages_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        count_copies:
          type: string
          readOnly: true
        count_loaned_copies:
          type: string
          readOnly: true
      required:
      - author
      - count_copies
      - count_loaned_copies
      - edition
      - id
      - isbn
      - language
      - pages_number
      - publisher
      - title
    Copyserializer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        is_prime:
          type: boolean
        is_loaned:
          type: boolean
        book_id:
          type: integer
          readOnly: true
        count_copies:
          type: string
          readOnly: true
      required:
      - book_id
      - count_copies
      - id
      - title
    Loan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        loan_date:
          type: string
          format: date-time
          readOnly: true
        expected_return:
          type: string
          format: date-time
        is_delayed:
          type: boolean
        returned:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        isbn:
          type: string
          maxLength: 17
        copy:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - copy
      - expected_return
      - id
      - isbn
      - loan_date
      - user
    Nested:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        is_prime:
          type: boolean
        is_loaned:
          type: boolean
        book:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - book
      - id
    PaginatedBookList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Book'
    PaginatedCopyserializerList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Copyserializer'
    PaginatedLoanList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Loan'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedBook:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        isbn:
          type: string
          maxLength: 17
        title:
          type: string
          maxLength: 150
        author:
          type: string
          maxLength: 150
        publisher:
          type: string
          maxLength: 100
        edition:
          type: string
          format: date
        genre:
          type: string
          nullable: true
          maxLength: 50
        language:
          type: string
          maxLength: 50
        pages_number:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        count_copies:
          type: string
          readOnly: true
        count_loaned_copies:
          type: string
          readOnly: true
    PatchedCopyserializer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          readOnly: true
        is_prime:
          type: boolean
        is_loaned:
          type: boolean
        book_id:
          type: integer
          readOnly: true
        count_copies:
          type: string
          readOnly: true
    PatchedLoan:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        loan_date:
          type: string
          format: date-time
          readOnly: true
        expected_return:
          type: string
          format: date-time
        is_delayed:
          type: boolean
        returned:
          type: string
          format: date-time
          nullable: true
        is_active:
          type: boolean
        isbn:
          type: string
          maxLength: 17
        copy:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        user:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 127
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        birthdate:
          type: string
          format: date
          nullable: true
        is_blocked:
          type: boolean
        is_employee:
          type: boolean
        followed_books:
          type: string
          readOnly: true
    TokenObtainPair:
      type: object
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 127
        password:
          type: string
          writeOnly: true
          maxLength: 128
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        birthdate:
          type: string
          format: date
          nullable: true
        is_blocked:
          type: boolean
        is_employee:
          type: boolean
        followed_books:
          type: string
          readOnly: true
      required:
      - email
      - first_name
      - followed_books
      - id
      - last_name
      - password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
